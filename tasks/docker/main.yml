---
- name: Ensure old versions of Docker are not installed
  package:
    name:
      - docker
      - docker-common
      - docker-engine
    state: absent

- name: Install iptables
  package:
    name: "iptables"
    state: "latest"

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Update apt and install docker-ce
  apt:
    name: "{{ docker_package }}"
    state: latest
    update_cache: true

- name: Install Docker Module for Python
  pip:
    name: docker

- name: Install Docker CLI
  package:
    name: "{{ docker_package }}-cli"
    state: "{{ docker_package_state }}"
  notify: restart docker

- name: Ensure Docker is started and enabled at boot
  service:
    name: docker
    state: "{{ docker_service_state }}"
    enabled: "{{ docker_service_enabled }}"
  when: local|default(false)|bool == false

- name: Set Docker Daemon options
  template:
    src: templates/daemon.json
    dest: /etc/docker/daemon.json
  notify: restart docker
  when: local|default(false)|bool == false

- include_tasks: local-persist.yml
  when: local|default(false)|bool == false and docker_install_local_persist

- name: Populate service facts (gets info about services already on the machine)
  service_facts:

- name: Ensure handlers are notified
  meta: flush_handlers
  
- include_tasks: install-docker-compose.yml
  when: docker_install_compose

- include_tasks: docker-users.yml
  when: docker_users
